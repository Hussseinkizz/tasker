{"version":3,"sources":["components/Topping.js","App.js","index.js"],"names":["Topping","setInputs","useState","text","setText","check","setCheck","handleSubmit","e","preventDefault","alert","className","onSubmit","type","placeholder","value","onChange","target","onClick","api","App","todos","setTodos","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","addTodo","todo","method","headers","body","JSON","stringify","handleDelete","id","filter","listItems","map","item","checked","completed","style","color","textDecoration","feedBack","textAlign","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OA0CeA,EAxCC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACTC,mBAAS,IADA,mBAC1BC,EAD0B,KACpBC,EADoB,OAEPF,oBAAS,GAFF,mBAE1BG,EAF0B,KAEnBC,EAFmB,KAI3BC,EAAe,SAACC,GACpBA,EAAEC,iBAEEN,GACFO,MAAM,8BAGRT,EAAU,CAACE,OAAME,UACjBD,EAAQ,IACRE,GAAS,IAGX,OACE,mCACE,sBAAKK,UAAU,UAAf,UACE,qBAAIA,UAAU,YAAd,UACE,cAAC,IAAD,CAAaA,UAAU,cADzB,YAGA,uBAAMA,UAAU,QAAQC,SAAUL,EAAlC,UACE,uBACEM,KAAK,OACLC,YAAY,yBACZH,UAAU,aACVI,MAAOZ,EACPa,SAAU,SAACR,GAAD,OAAOJ,EAAQI,EAAES,OAAOF,UAGpC,+BACE,cAAC,IAAD,CAAcJ,UAAU,YAAYO,QAASX,EAAcM,KAAK,sBC7BtEM,EAAM,8BAEG,SAASC,IAAO,IAAD,EACFlB,mBAAS,IADP,mBACrBmB,EADqB,KACdC,EADc,KAI5BC,qBAAU,YACK,uCAAG,4BAAAC,EAAA,sEACeC,IADf,OACTC,EADS,OAEfJ,EAASI,GAFM,2CAAH,qDAKZC,KACA,IAEJ,IAAMF,EAAU,uCAAG,8BAAAD,EAAA,sEACII,MAAMT,GADV,cACRU,EADQ,gBAEKA,EAAIC,OAFT,cAERC,EAFQ,yBAIPA,GAJO,2CAAH,qDAwBXC,EAAO,uCAAG,WAAOC,GAAP,iBAAAT,EAAA,sEACII,MAAMT,EAAK,CAC3Be,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAOC,KAAKC,UAAUL,KANV,cACRJ,EADQ,gBASKA,EAAIC,OATT,OASRC,EATQ,OAUdT,EAAS,GAAD,mBAAKD,GAAL,CAAWU,KAVL,2CAAH,sDAmBNQ,EAAY,uCAAG,WAAOC,GAAP,SAAAhB,EAAA,sEACbI,MAAM,GAAD,OAAIT,EAAJ,YAAWqB,GACrB,CACEN,OAAQ,WAHQ,OAKpBZ,EAASD,EAAMoB,QAAO,SAAAR,GAAI,OAAIA,EAAKO,KAAOA,MALtB,2CAAH,sDAUbE,EACNrB,EAAMsB,KAAI,SAAAC,GAAI,OACZ,sBAAKjC,UAAU,WAAf,UACA,gCACA,uBAAOE,KAAK,WAAWgC,QAASD,EAAKE,UACnC9B,SAAU,kBAlDSwB,EAkDUI,EAAKJ,QAjDlClB,EAASD,EAAMsB,KAAI,SAAAV,GAGb,OAFCA,EAAKO,KAAOA,IACZP,EAAKa,WAAab,EAAKa,WACjBb,MAJM,IAAAO,KAoDrB,sBACA7B,UAAU,WACVoC,MAAOH,EAAKE,UAAY,CAACE,MAAO,UAAUC,eAAgB,gBAAkB,KAF5E,SAGGL,EAAKzC,UAIR,8BACA,cAAC,IAAD,CAAeQ,UAAU,aAAaO,QAAS,kBAAMqB,EAAaK,EAAKJ,eAKnEU,EAAW,oBAAIH,MAAO,CAACI,UAAU,UAAtB,kCAGf,OACE,mCACE,qBAAKxC,UAAU,MAAf,SACE,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,UAAf,SACA,cAAC,EAAD,CACEV,UAAa+B,MAGf,qBAAKrB,UAAU,aAAf,SACCU,EAAM+B,OAAS,EAAIV,EAAYQ,WCtG5CG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnC,EAAD,MAEFoC,SAASC,eAAe,W","file":"static/js/main.adb17498.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport { FaGithubAlt, FaPlusSquare } from 'react-icons/fa'\r\nconst Topping = ({ setInputs }) => {\r\n  const [text, setText] = useState('')\r\n  const [check, setCheck] = useState(false)\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    \r\n    if(!text) {\r\n      alert(\"Please enter a valid task!\")\r\n    }\r\n    \r\n    setInputs({text, check})\r\n    setText('')\r\n    setCheck(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Topping\">\r\n        <h1 className=\"TodoTitle\">\r\n          <FaGithubAlt className='TitleIcon'/>Tasker\r\n        </h1>\r\n        <form className=\"Field\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"add your tasks here...\"\r\n            className=\"InputField\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)\r\n}\r\n          />\r\n          <span>\r\n            <FaPlusSquare className=\"InputIcon\" onClick={handleSubmit} type=\"submit\"/>\r\n          </span>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Topping\r\n","import './styles/css/App.min.css'\nimport { useState, useEffect } from 'react'\nimport { FaMinusSquare} from 'react-icons/fa'\nimport Topping from './components/Topping'\n\nconst api = 'http://localhost:5000/tasks'; // our backend api\n\nexport default function App() {\n  const [todos, setTodos] = useState([])\n\n// FETCH DATA FROM THE SERVER & SET IT TO STATE\n  useEffect(() => {\n   const getTasks = async () => {\n     const tasksFromServer = await fetchTasks()\n     setTodos(tasksFromServer)\n   }\n\n     getTasks()\n  }, [])\n\n const fetchTasks = async () => {\n      const res = await fetch(api)\n      const data = await res.json()\n\n      return data\n    }\n    \n// TOGGLE CHECKBOX\n  const handleChange = id => {\n    setTodos(todos.map(todo => {\n        if(todo.id === id) {\n           todo.completed = !todo.completed\n        } return todo\n    }))\n}\n\n// HANDLE FORM SUBMISSION, ADD A TODO...\n  // const addTodo = (todo) => {\n  //   const key = Math.floor(Math.random() * 1000) + 1\n  //   const newTodo = {key,...todo}\n  //   setTodos([...todos,newTodo])\n  // }\n\n// SEND A REQ TO CREATE A NEW OBJECT IN DB,  AND RETURN IT BACK UPDATING STATE\nconst addTodo = async (todo) => {\n  const res = await fetch(api, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body : JSON.stringify(todo)\n  })\n\n  const data = await res.json()\n  setTodos([...todos,data])\n}\n\n// DELETE A TODO\n// const handleDelete = id => {\n//   setTodos(todos.filter(todo => todo.id !== id))\n// }\n\n// SEND A REQ TO DELETE GIVEN IDENTIFIED TASK\n const handleDelete = async (id) => {\n   await fetch(`${api}/${id}`,\n    {\n      method: 'DELETE',\n    })\n  setTodos(todos.filter(todo => todo.id !== id))\n }\n\n\n// MAKE TODOS A LIST\nconst listItems = \ntodos.map(item => \n  <div className=\"TodoItem\">\n  <div>\n  <input type=\"checkbox\" checked={item.completed}\n    onChange={() => handleChange(item.id)}\n  />\n  <span \n  className=\"TodoText\" \n  style={item.completed ? {color: '#9CA3AF',textDecoration: 'line-through'} : null}>\n    {item.text}\n  </span>\n  </div>\n  \n  <div>\n  <FaMinusSquare className=\"DeleteIcon\" onClick={() => handleDelete(item.id)}/>\n  </div>\n</div>)\n\n// GIVE FEEDBACK FOR EMPTY TASKS\nconst feedBack = <h4 style={{textAlign:'center'}}>well done, no todos!</h4>\n\n// BELOW WE RENDER OUR STUFF TO THE END USER!\n  return (\n    <>\n      <div className='App'>\n        <div className='TodoWrapper'>\n            <div className='Topping'>\n            <Topping \n              setInputs = {addTodo}\n            />\n            </div>\n            <div className='BottomPane'>\n            {todos.length > 0 ? listItems : feedBack}\n            </div>\n         </div>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}